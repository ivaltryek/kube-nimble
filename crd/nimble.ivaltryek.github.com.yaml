apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: nimbles.ivaltryek.github.com
spec:
  group: ivaltryek.github.com
  names:
    categories: []
    kind: Nimble
    plural: nimbles
    shortNames: []
    singular: nimble
  scope: Namespaced
  versions:
  - additionalPrinterColumns: []
    name: v1
    schema:
      openAPIV3Schema:
        description: Auto-generated derived type for NimbleSpec via `CustomResource`
        properties:
          spec:
            properties:
              deployment:
                description: Spec for Deployment Object
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    default:
                      app.kubernetes.io/managed-by: kube-nimble
                    description: Annotations to be applied to the deployment and its pods.
                    nullable: true
                    type: object
                  containers:
                    description: Containers to run in the deployment.
                    items:
                      properties:
                        command:
                          description: override entrypoint command for a container.
                          items:
                            type: string
                          nullable: true
                          type: array
                        env:
                          description: List of environment variables to set in the container. Cannot be updated.
                          items:
                            properties:
                              name:
                                description: Name of environment variable
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. “$$(VAR_NAME)” will produce the string literal “$(VAR_NAME)”. Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to “”.'
                                nullable: true
                                type: string
                            required:
                            - name
                            type: object
                          nullable: true
                          type: array
                        envFrom:
                          description: List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
                          items:
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                nullable: true
                                type: string
                              secretRef:
                                description: The Secret to select from
                                nullable: true
                                type: string
                            type: object
                          nullable: true
                          type: array
                        image:
                          description: Image to use for a container.
                          type: string
                        limits:
                          description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          nullable: true
                          properties:
                            cpu:
                              description: cpu config (requests/limits) for the container.
                              nullable: true
                              type: string
                            memory:
                              description: memory config (requests/limits) for the container.
                              nullable: true
                              type: string
                          type: object
                        livenessProbe:
                          description: 'Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          nullable: true
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              items:
                                type: string
                              nullable: true
                              type: array
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              nullable: true
                              properties:
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  description: Name or number of the port to access on the container. Number must be in the range 1 to 65535.
                                  format: int32
                                  type: integer
                              required:
                              - path
                              - port
                              type: object
                            initialDelaySeconds:
                              default: 0
                              description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              nullable: true
                              type: integer
                            periodSeconds:
                              default: 10
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              format: int32
                              nullable: true
                              type: integer
                            successThreshold:
                              default: 1
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                              format: int32
                              nullable: true
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies an action involving a TCP port.
                              nullable: true
                              properties:
                                port:
                                  description: TCP Port to make checks against.
                                  format: int32
                                  type: integer
                              required:
                              - port
                              type: object
                          type: object
                        name:
                          description: Name of the container.
                          type: string
                        readinessProbe:
                          description: 'Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          nullable: true
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              items:
                                type: string
                              nullable: true
                              type: array
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              nullable: true
                              properties:
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  description: Name or number of the port to access on the container. Number must be in the range 1 to 65535.
                                  format: int32
                                  type: integer
                              required:
                              - path
                              - port
                              type: object
                            initialDelaySeconds:
                              default: 0
                              description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              nullable: true
                              type: integer
                            periodSeconds:
                              default: 10
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              format: int32
                              nullable: true
                              type: integer
                            successThreshold:
                              default: 1
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                              format: int32
                              nullable: true
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies an action involving a TCP port.
                              nullable: true
                              properties:
                                port:
                                  description: TCP Port to make checks against.
                                  format: int32
                                  type: integer
                              required:
                              - port
                              type: object
                          type: object
                        requests:
                          description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          nullable: true
                          properties:
                            cpu:
                              description: cpu config (requests/limits) for the container.
                              nullable: true
                              type: string
                            memory:
                              description: memory config (requests/limits) for the container.
                              nullable: true
                              type: string
                          type: object
                        startupProbe:
                          description: 'StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod’s lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          nullable: true
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              items:
                                type: string
                              nullable: true
                              type: array
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              nullable: true
                              properties:
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  description: Name or number of the port to access on the container. Number must be in the range 1 to 65535.
                                  format: int32
                                  type: integer
                              required:
                              - path
                              - port
                              type: object
                            initialDelaySeconds:
                              default: 0
                              description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              nullable: true
                              type: integer
                            periodSeconds:
                              default: 10
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              format: int32
                              nullable: true
                              type: integer
                            successThreshold:
                              default: 1
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                              format: int32
                              nullable: true
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies an action involving a TCP port.
                              nullable: true
                              properties:
                                port:
                                  description: TCP Port to make checks against.
                                  format: int32
                                  type: integer
                              required:
                              - port
                              type: object
                          type: object
                      required:
                      - image
                      - name
                      type: object
                    type: array
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels to be applied to the deployment and its pods.
                    type: object
                required:
                - containers
                - labels
                type: object
              hpa:
                description: Spec for Autoscaling (HPA) Object
                nullable: true
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    default:
                      app.kubernetes.io/managed-by: kube-nimble
                    description: Annotations to be applied to the HPA object
                    nullable: true
                    type: object
                  max:
                    description: maxReplicas is the upper limit for the number of replicas to which the autoscaler can scale up. It cannot be less that minReplicas.
                    format: int32
                    type: integer
                  min:
                    default: 1
                    description: minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down. It defaults to 1 pod. minReplicas is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or External metric is configured. Scaling is active as long as at least one metric value is available.
                    format: int32
                    nullable: true
                    type: integer
                  resourcePolicy:
                    description: resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing each pod in the current scale target (e.g. CPU or memory).
                    nullable: true
                    properties:
                      avgUtil:
                        description: avgUtil is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods. Currently only valid for Resource metric source type
                        format: int32
                        nullable: true
                        type: integer
                      name:
                        description: name is the name of the resource in question.
                        type: string
                      type:
                        description: type represents whether the metric type is Utilization, Value, or AverageValue
                        type: string
                    required:
                    - name
                    - type
                    type: object
                required:
                - max
                type: object
              ingress:
                description: Spec for Ingress Object
                nullable: true
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    default:
                      app.kubernetes.io/managed-by: kube-nimble
                    description: annotations to be applied on Ingress Object
                    nullable: true
                    type: object
                  class:
                    description: ingressClassName is the name of an IngressClass cluster resource. Ingress controller implementations use this field to know whether they should be serving this Ingress resource, by a transitive connection (controller -> IngressClass -> Ingress resource). Although the kubernetes.io/ingress.class annotation (simple constant name) was never formally defined, it was widely supported by Ingress controllers to create a direct binding between Ingress controller and Ingress resources. Newly created Ingress resources should prefer using the field. However, even though the annotation is officially deprecated, for backwards compatibility reasons, ingress controllers should still honor that annotation if present.
                    nullable: true
                    type: string
                  rules:
                    description: rules is a list of host rules used to configure the Ingress. If unspecified, or no rule matches, all traffic is sent to the default backend.
                    items:
                      properties:
                        host:
                          description: 'host can be “precise” which is a domain name without the terminating dot of a network host (e.g. “foo.bar.com”) or “wildcard”, which is a domain name prefixed with a single wildcard label (e.g. “.foo.com”). The wildcard character ‘’ must appear by itself as the first DNS label and matches only a single label. You cannot have a wildcard label by itself (e.g. Host == “*”). Requests will be matched against the Host field in the following way: 1. If host is precise, the request matches this rule if the http host header is equal to Host. 2. If host is a wildcard, then the request matches this rule if the http host header is to equal to the suffix (removing the first label) of the wildcard rule.'
                          nullable: true
                          type: string
                        path:
                          description: path is matched against the path of an incoming request. Currently it can contain characters disallowed from the conventional “path” part of a URL as defined by RFC 3986. Paths must begin with a ‘/’ and must be present when using PathType with value “Exact” or “Prefix”.
                          nullable: true
                          type: string
                        pathType:
                          description: 'pathType determines the interpretation of the path matching. PathType can be one of the following values: * Exact: Matches the URL path exactly. * Prefix: Matches based on a URL path prefix split by ‘/’. Matching is done on a path element by element basis. A path element refers is the list of labels in the path split by the ‘/’ separator. A request is a match for path p if every p is an element-wise prefix of p of the request path. Note that if the last element of the path is a substring of the last element in request path, it is not a match (e.g. /foo/bar matches /foo/bar/baz, but does not match /foo/barbaz).'
                          type: string
                        port:
                          description: port of the referenced service. A port name or port number is required for a IngressServiceBackend.
                          format: int32
                          nullable: true
                          type: integer
                      required:
                      - pathType
                      type: object
                    nullable: true
                    type: array
                type: object
              service:
                description: Spec for Service Object
                nullable: true
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    default:
                      app.kubernetes.io/managed-by: kube-nimble
                    description: Annotations to be applied to the service.
                    nullable: true
                    type: object
                  ports:
                    description: 'The list of ports that are exposed by this service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
                    items:
                      properties:
                        name:
                          description: The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the ‘name’ field in the EndpointPort. Optional if only one ServicePort is defined on this service.
                          nullable: true
                          type: string
                        nodePort:
                          description: 'The port on each node on which this service is exposed when type is NodePort or LoadBalancer. Usually assigned by the system. If a value is specified, in-range, and not in use it will be used, otherwise the operation will fail. If not specified, a port will be allocated if this Service requires one. If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type from NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                          format: int32
                          nullable: true
                          type: integer
                        port:
                          description: The port that will be exposed by this service.
                          format: int32
                          type: integer
                        protocol:
                          default: TCP
                          description: The IP protocol for this port. Supports “TCP”, “UDP”, and “SCTP”. Default is TCP.
                          nullable: true
                          type: string
                        targetPort:
                          description: 'Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod’s container ports. If this is not specified, the value of the ‘port’ field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the ‘port’ field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                          format: int32
                          nullable: true
                          type: integer
                      required:
                      - port
                      type: object
                    nullable: true
                    type: array
                  selector:
                    additionalProperties:
                      type: string
                    description: 'Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/'
                    nullable: true
                    type: object
                  type:
                    default: ClusterIP
                    description: 'type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. “ClusterIP” allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object or EndpointSlice objects. If clusterIP is “None”, no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a virtual IP. “NodePort” builds on ClusterIP and allocates a port on every node which routes to the same endpoints as the clusterIP. “LoadBalancer” builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the same endpoints as the clusterIP. “ExternalName” aliases this service to the specified externalName. Several other fields do not apply to ExternalName services. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types'
                    nullable: true
                    type: string
                type: object
            required:
            - deployment
            type: object
        required:
        - spec
        title: Nimble
        type: object
    served: true
    storage: true
    subresources: {}
